name: Rclone-Unified Parallel Video lanzoui

on:
  workflow_dispatch:

env:
  REMOTE_DIR: ${{ github.run_id }}
  WORKFLOW_RUN_ID: ${{ github.run_id }}

jobs:
  split_and_cache:
    runs-on: ubuntu-latest
    outputs:
      matrix_payload: ${{ steps.split.outputs.matrix_array }}
      original_filename: ${{ steps.split.outputs.original_filename }}
    steps:
      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Clone veiled-journeys repository
        env:
          PAT: ${{ secrets.GITCODE_TOKEN }} 
        run: git clone https://Jyf0214:${PAT}@gitcode.com/Jyf0214/veiled-journeys.git

      - name: Install Python requirements
        working-directory: ./veiled-journeys
        run: pip install -r requirements.txt

      - name: Start Session (Decrypt veiled-journeys)
        working-directory: ./veiled-journeys
        env:
          Jyf0214_PASSWORD: ${{ secrets.Jyf0214_PASSWORD }}
        run: python main.py start

      - name: Download Original Video (Using Encrypted Script)
        env:
          # Sushang WebDAV
          SUSHANG_WEBDAV_USERNAME: ${{ secrets.SUSHANG_WEBDAV_USERNAME }}
          SUSHANG_WEBDAV_PASSWORD: ${{ secrets.SUSHANG_WEBDAV_PASSWORD }}

          # GoFile API
          GOFILE_API_TOKEN: ${{ secrets.GOFILE_API_TOKEN }}

          # Jike TeraCloud WebDAV
          JIKE_WEBDAV_USERNAME: ${{ secrets.JIKE_WEBDAV_USERNAME }}
          JIKE_WEBDAV_PASSWORD: ${{ secrets.JIKE_WEBDAV_PASSWORD }}

          # Upstash Redis
          UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

          # Yandex WebDAV
          YANDEX_WEBDAV_USERNAME: ${{ secrets.YANDEX_WEBDAV_USERNAME }}
          YANDEX_WEBDAV_PASSWORD: ${{ secrets.YANDEX_WEBDAV_PASSWORD }}

          # Koofr WebDAV
          KOOFR_WEBDAV_BASE_URL: ${{ secrets.KOOFR_WEBDAV_BASE_URL }}
          KOOFR_WEBDAV_USERNAME: ${{ secrets.KOOFR_WEBDAV_USERNAME }}
          KOOFR_WEBDAV_PASSWORD: ${{ secrets.KOOFR_WEBDAV_PASSWORD }}
        run: |
          cd veiled-journeys/Jyf0214
          mkdir -p ./config ./files ./host_videos ./output_parts
          python webdav_sync.py cloud-to-local ./config /Bacloud1/config
          python webdav_sync.py cloud-to-local ./host_videos /teracloud/videos/wallpaper
          while true; do
            rm -rf ./files/*
            rm -rf ./output_parts/*
            python webdav_sync.py cloud-to-local ./files /teracloud/kemono_uploads/aibishoujo/part_1 --max-files 1 --delete-source
            if [ -z "$(ls -A ./files)" ]; then
              echo "❌ No more files to process."
              exit 1
            fi
            if ! python do_stego.py; then
              echo "❌ Error in do_stego.py, uploading compressed file back."
              python webdav_sync.py local-to-cloud ./files /teracloud/kemono_uploads/aibishoujo/part_1
              exit 1
            fi
            python webdav_sync.py local-to-cloud ./output_parts /teracloud/视频壁纸/aibishoujo
            python webdav_sync.py local-to-cloud ./config /Bacloud1/config
          done

      - name: Cleanup Session (Remove Decrypted Files)
        if: always()
        working-directory: ./veiled-journeys
        run: python main.py cleanup
