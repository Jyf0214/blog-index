name: Optimized Video Processor

on:
  workflow_dispatch:

jobs:
  video-processing:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Setup Environment
        run: |
          sudo apt-get update
          sudo apt install ttf-mscorefonts-installer -y
          sudo fc-cache -fv
          sudo apt-get install -y ffmpeg mediainfo htop 
          pip install requests>=2.28.0 cryptography>=39.0.0 resend>=0.1.0 huaweicloudsdkfunctiongraph>=3.0.0 huaweicloudsdkcore>=3.0.0 pillow webdavclient3

      - name: Clone Repository
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          git clone https://x-access-token:${PAT}@github.com/Jyf0214/veiled-journeys.git

      - name: Create Processor Script
        run: |
          cat > veiled-journeys/video_processor.sh <<'EOL'
          #!/bin/bash

          # 查找视频文件和 SRT 字幕文件
          find_video() {
              find . -maxdepth 1 -type \( -name "*.mp4" -o -name "*.avi" -o -name "*.mkv" \) -print -quit
          }

          find_srt() {
              find . -maxdepth 1 -type f -name "*.srt" -print -quit
          }

          # 获取当前目录
          CURRENT_DIR=$(pwd)

          # 查找视频和字幕文件
          VIDEO_FILE=$(find_video)
          SRT_FILE=$(find_srt)

          # 检查是否找到了视频和字幕文件
          if [ -z "$VIDEO_FILE" ] || [ -z "$SRT_FILE" ]; then
              echo "未找到视频文件或 SRT 字幕文件。请确保它们在同一个目录下，且目录中只有一个视频文件。"
              exit 1
          fi

          # 构建输出文件路径
          OUTPUT_FILE="$CURRENT_DIR/output.mp4"

          # FFmpeg 命令
          FFMPEG_COMMAND="ffmpeg -i \"$VIDEO_FILE\" -vf \"subtitles='$SRT_FILE':force_style='FontName=Microsoft YaHei,FontSize=24,PrimaryColour=&H00FFFFFF,BorderStyle=1,OutlineColour=&H00000000,Shadow=0'\" -c:v libx264 -profile:v baseline -level 3.0 -c:a aac -b:a 128k -movflags faststart \"$OUTPUT_FILE\""

          # 执行 FFmpeg 命令
          echo "Running FFmpeg command: $FFMPEG_COMMAND"
          eval "$FFMPEG_COMMAND"

          # 检查 FFmpeg 命令是否成功
          if [ $? -eq 0 ]; then
              echo "视频和字幕合并完成！输出文件: $OUTPUT_FILE"
              echo "✅ 处理完成 | 输出文件: output*.mp4"
          else
              echo "FFmpeg 执行出错！"
              exit 1
          fi

          exit 0
          EOL

          chmod +x veiled-journeys/video_processor.sh
          cd veiled-journeys
          python koofr_download_and_delete.py

      - name: Process Video
        run: |
          cd veiled-journeys
          ./video_processor.sh 

      - name: Upload Results
        run: |
          cd veiled-journeys
          python koofr_upload.py