name: Run OpenList + Kemono Downloader (with Full Config)

on:
  workflow_dispatch:

jobs:
  openlist-kemono:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clone private downloader repository
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          git clone https://x-access-token:${{ env.PAT }}@github.com/Jyf0214/veiled-journeys.git

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Prepare TERM env
        run: echo "TERM=xterm-256color" >> $GITHUB_ENV

      - name: Install OpenList
        run: |
          curl -fsSL "https://docs.openlist.team/v3.sh" -o v3.sh
          sudo bash v3.sh install

      - name: Configure OpenList, Add Storage and Restore Data
        env:
          OPENLIST_PASSWORD: ${{ secrets.OPENLIST_PASSWORD }}
          TERABOX_COOKIE_SECRET: ${{ secrets.TERABOX_COOKIE }}
        run: |
          DATA_DIR="/opt/openlist/data"
          
          # 1. 设置管理员密码
          echo "Setting admin password..."
          sudo openlist-manager admin set "${{ env.OPENLIST_PASSWORD }}" --data "$DATA_DIR"
          
          # 2. 为admin用户启用WebDAV
          echo "Enabling WebDAV for admin user..."
          sudo openlist-manager user set admin --webdav_policy rw --data "$DATA_DIR"
          
          # 3. 添加Terabox存储
          if [ -n "$TERABOX_COOKIE_SECRET" ]; then
            echo "Adding Terabox storage at /terabox..."
            sudo openlist-manager storage add terabox /terabox --cookie "${{ env.TERABOX_COOKIE_SECRET }}" --data "$DATA_DIR"
          else
            echo "::warning::TERABOX_COOKIE secret is not set. Skipping Terabox storage."
          fi

          # 4. 检查并恢复 'openlist-data' 目录中的数据
          if [ -d "${{ github.workspace }}/openlist-data" ]; then
            echo "Found existing data in 'openlist-data'. Restoring..."
            sudo cp -r ${{ github.workspace }}/openlist-data/* "$DATA_DIR"/
            echo "Data restoration complete."
          else
            echo "No 'openlist-data' directory found. Starting with a fresh instance."
          fi

      - name: Start OpenList Service
        run: |
          # 修正：使用 openlist-manager 启动服务
          sudo openlist-manager start --data "/opt/openlist/data"

      # 新增步骤：为下载器创建目标目录
      - name: Create WebDAV Upload Directory
        run: |
          DATA_DIR="/opt/openlist/data"
          # 等待几秒钟确保服务完全启动
          sleep 5
          echo "Creating target directory for downloader..."
          # 在默认的“本地存储”中创建 kemono_uploads 目录
          sudo openlist-manager file mkdir /本地存储/kemono_uploads --data "$DATA_DIR"

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install requests tqdm py7zr webdavclient3 rarfile

      - name: Run Kemono Downloader (Connecting to localhost)
        env:
          OPENLIST_PASSWORD: ${{ secrets.OPENLIST_PASSWORD }}
        run: |
          echo "Starting downloader, which will connect to OpenList locally."
          # 假设脚本会自动上传到 /本地存储/kemono_uploads
          python veiled-journeys/kemono_downloader.py

      - name: Stop OpenList Service
        if: always()
        run: |
          echo "Stopping OpenList service..."
          # 修正：使用 openlist-manager 停止服务
          sudo openlist-manager stop --data "/opt/openlist/data"

      - name: Upload downloads
        uses: actions/upload-artifact@v4
        with:
          name: kemono-output
          # 您可能需要根据脚本的实际输出调整这个路径
          path: ./output/
          if-no-files-found: error
