name: Run OpenList + Kemono Downloader (with Full Config)

on:
  workflow_dispatch:

jobs:
  openlist-kemono:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clone private downloader repository
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          git clone https://x-access-token:${{ env.PAT }}@github.com/Jyf0214/veiled-journeys.git

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Prepare TERM env
        run: echo "TERM=xterm-256color" >> $GITHUB_ENV

      - name: Install OpenList
        run: |
          curl -fsSL "https://docs.openlist.team/v3.sh" -o v3.sh
          # 安装到默认路径 /opt/openlist
          sudo bash v3.sh install

      # 最终修正：直接调用系统命令，并通过 --data 参数指定数据目录
      - name: Configure OpenList, Add Storage and Restore Data
        env:
          OPENLIST_PASSWORD: ${{ secrets.OPENLIST_PASSWORD }}
          TERABOX_COOKIE_SECRET: ${{ secrets.TERABOX_COOKIE }}
        run: |
          # 定义数据目录变量以便复用
          DATA_DIR="/opt/openlist/data"
          
          # 1. 设置管理员密码
          echo "Setting admin password..."
          sudo openlist-manager admin set "${{ env.OPENLIST_PASSWORD }}" --data "$DATA_DIR"
          
          # 2. 为admin用户启用WebDAV
          echo "Enabling WebDAV for admin user..."
          sudo openlist-manager user set admin --webdav_policy rw --data "$DATA_DIR"
          
          # 3. 添加Terabox存储
          if [ -z "$TERABOX_COOKIE_SECRET" ]; then
            echo "::warning::TERABOX_COOKIE secret is not set. Skipping Terabox storage."
          else
            echo "Adding Terabox storage at /terabox..."
            sudo openlist-manager storage add terabox /terabox --cookie "${{ env.TERABOX_COOKIE_SECRET }}" --data "$DATA_DIR"
          fi

          # 4. 检查并恢复 'openlist-data' 目录中的数据
          if [ -d "${{ github.workspace }}/openlist-data" ]; then
            echo "Found existing data in 'openlist-data'. Restoring..."
            sudo cp -r ${{ github.workspace }}/openlist-data/* "$DATA_DIR"/
            echo "Data restoration complete."
          else
            echo "No 'openlist-data' directory found. Starting with a fresh instance."
          fi

      - name: Start OpenList Service
        run: |
          # 启动服务使用快捷命令
          sudo openlist start

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install requests tqdm py7zr webdavclient3 rarfile

      - name: Run Kemono Downloader (Connecting to localhost)
        env:
          OPENLIST_PASSWORD: ${{ secrets.OPENLIST_PASSWORD }}
        run: |
          echo "Starting downloader, which will connect to OpenList locally."
          python veiled-journeys/kemono_downloader.py

      - name: Stop OpenList Service
        if: always()
        run: |
          echo "Stopping OpenList service..."
          sudo openlist stop

      - name: Upload downloads
        uses: actions/upload-artifact@v4
        with:
          name: kemono-output
          path: ./output/
          if-no-files-found: error
