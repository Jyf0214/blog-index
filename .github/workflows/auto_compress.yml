name: Video Compression Workflow Optimized

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/apt/archives
            /var/lib/apt/lists
            ~/.cache/pip
            /usr/local/bin/ffmpeg
          key: ${{ runner.os }}-deps-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Setup Dependencies
        run: |
          if [ ! -f /usr/local/bin/ffmpeg ]; then
            echo "FFmpeg not found in cache, installing..."
            sudo apt-get update
            sudo apt-get install -y ffmpeg
            # 将安装好的 ffmpeg 移动到缓存目录
            sudo cp /usr/bin/ffmpeg /usr/local/bin/ffmpeg
          else
            echo "FFmpeg found in cache."
            sudo ln -s /usr/local/bin/ffmpeg /usr/bin/ffmpeg || true
          fi

      - name: Clone veiled-journeys repository
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          git clone https://x-access-token:${PAT}@github.com/Jyf0214/veiled-journeys.git

      - name: Install Python requirements
        run: |
          pip install -r veiled-journeys/requirements.txt

      - name: Download One Video File from Directory
        run: |
          mkdir -p video_work
          cd veiled-journeys
          python webdav_download.py -a="MyVideos/" -b="../video_work/" -c=1
          cd ..

      - name: Process and Compare Video
        id: process
        run: |
          cd video_work
          ORIGINAL_FILE_PATH=$(find . -maxdepth 1 -type f -name "*.mp4" -print -quit)
          
          if [ -z "$ORIGINAL_FILE_PATH" ]; then
            echo "::error::No .mp4 file found in the downloaded content!"
            exit 1
          fi
          
          ORIGINAL_FILENAME=$(basename "$ORIGINAL_FILE_PATH")
          COMPRESSED_FILE="compressed_${ORIGINAL_FILENAME}"
          
          echo "Processing file: $ORIGINAL_FILENAME"
          echo "Starting FFmpeg encoding with balanced settings..."
          
          # 优化点：将 preset 从 veryslow 改为 medium，速度将大幅提升
          # CRF 18 依然是高质量的设置
          ffmpeg -i "$ORIGINAL_FILENAME" -c:v libx265 -preset slow -crf 18 -tag:v hvc1 -c:a copy "$COMPRESSED_FILE"
          
          ORIGINAL_SIZE=$(stat -c%s "$ORIGINAL_FILENAME")
          COMPRESSED_SIZE=$(stat -c%s "$COMPRESSED_FILE")
          
          echo "Original size: $ORIGINAL_SIZE bytes"
          echo "Compressed size: $COMPRESSED_SIZE bytes"
          
          FINAL_FILENAME="$ORIGINAL_FILENAME"
          
          if [ "$ORIGINAL_SIZE" -le "$COMPRESSED_SIZE" ]; then
            echo "Compressed file is not smaller. Keeping original."
            rm "$COMPRESSED_FILE"
          else
            echo "Compressed file is smaller. Keeping compressed version."
            rm "$ORIGINAL_FILENAME"
            mv "$COMPRESSED_FILE" "$FINAL_FILENAME"
          fi
          
          echo "final_file=video_work/$FINAL_FILENAME" >> $GITHUB_OUTPUT
          cd ..

      - name: Upload to GoFile and Update List (Silent)
        run: |
          python veiled-journeys/gofile_manager.py upload \
            --file "${{ steps.process.outputs.final_file }}" \
            --list-file "compressed_videos_list.txt" \
            > /dev/null 2>&1