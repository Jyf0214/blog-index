name: Discord-Bot and Image Classification

on:
  workflow_dispatch:
    # --- 核心改动: 添加手动触发时的输入选项 ---
    inputs:
      search_mode:
        description: 'SauceNAO 分类模式'
        required: true
        default: 'pixiv_priority'
        type: choice
        options:
          - pixiv_priority    # 对应: 85% 相似度, 仅限 Pixiv
          - high_confidence   # 对应: 90% 相似度, 全网来源

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ---------- 1. 检出当前仓库 ----------
      - name: Checkout workflow repository
        uses: actions/checkout@v4

      # ---------- 3. 设置 Python 环境 ----------
      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install Python packages
        run: |
          pip install --upgrade pip
          pip install numpy onnxruntime pandas pillow requests pyyaml 

      - name: Start Session (Decrypt veiled-journeys)
        working-directory: ./veiled-journeys
        env:
          Jyf0214_PASSWORD: ${{ secrets.Jyf0214_PASSWORD }}
        run: python main.py start

      # ---------- 5. 安装项目特定依赖 ----------
      - name: Install project requirements
        run: |
          # 检查并安装 veiled-journeys 的依赖 (如果存在)
          if [ -f veiled-journeys/requirements.txt ]; then
            pip install -r veiled-journeys/requirements.txt
          fi
          # 检查并安装 Discord Bot 的依赖 (如果存在)
          if [ -f veiled-journeys/Discord-Gemini-Chatbot/Jyf0214/requirements.txt ]; then
            pip install -r veiled-journeys/Jyf0214/Discord-Gemini-Chatbot/requirements.txt
          fi

        
# ---------- 7. 启动 Discord Bot (后台运行) ----------
      - name: Start Discord bot
        env:
          GOOGLE_AI_KEY: ${{ secrets.GOOGLE_AI_KEY }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
        run: |
          cd veiled-journeys/Jyf0214/Discord-Gemini-Chatbot
          nohup python bot.py > bot.log 2>&1 &
          echo "Discord Bot 已在后台启动。"


      - name: Run SauceNAO Classifier
        env:
          # Sushang WebDAV
          SUSHANG_WEBDAV_USERNAME: ${{ secrets.SUSHANG_WEBDAV_USERNAME }}
          SUSHANG_WEBDAV_PASSWORD: ${{ secrets.SUSHANG_WEBDAV_PASSWORD }}

          # GoFile API
          GOFILE_API_TOKEN: ${{ secrets.GOFILE_API_TOKEN }}

          # Jike TeraCloud WebDAV
          JIKE_WEBDAV_USERNAME: ${{ secrets.JIKE_WEBDAV_USERNAME }}
          JIKE_WEBDAV_PASSWORD: ${{ secrets.JIKE_WEBDAV_PASSWORD }}

          # Upstash Redis
          UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

          # Yandex WebDAV
          YANDEX_WEBDAV_USERNAME: ${{ secrets.YANDEX_WEBDAV_USERNAME }}
          YANDEX_WEBDAV_PASSWORD: ${{ secrets.YANDEX_WEBDAV_PASSWORD }}

          # Koofr WebDAV
          KOOFR_WEBDAV_BASE_URL: ${{ secrets.KOOFR_WEBDAV_BASE_URL }}
          KOOFR_WEBDAV_USERNAME: ${{ secrets.KOOFR_WEBDAV_USERNAME }}
          KOOFR_WEBDAV_PASSWORD: ${{ secrets.KOOFR_WEBDAV_PASSWORD }}
        run: |
          cd veiled-journeys/Jyf0214
          python process_images.py
          python detect_nsfw.py
          

      - name: Stop Discord bot after delay
        run: |
          echo "分类任务完成。将等待 5 小时 50 分钟后停止 Bot..."
          sleep $((5*3600 + 50*60))
          pkill -f bot.py
          echo "Discord Bot 已停止。"

      - name: Cleanup Session (Remove Decrypted Files)
        if: always()
        working-directory: ./veiled-journeys
        run: python main.py cleanup