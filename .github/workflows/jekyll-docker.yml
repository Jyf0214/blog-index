name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # 在 main 分支推送时触发

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'  # 项目使用的 Node.js 版本，可根据需要调整

    - name: Cache Node modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: yarn install  # 使用 Yarn 安装依赖

    - name: Build project
      run: yarn build  # Vite 默认构建命令

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist  # Vite 默认构建输出目录
        cname: jyf20100214.giize.com


  sync-repositories:
    runs-on: ubuntu-latest
    steps:
      # 步骤1：检出当前仓库（包含所有提交历史）
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整提交历史

      # 步骤2：获取仓库信息
      - name: Get repository info
        id: repo-info
        run: |
          OWNER=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1)
          REPO=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f2)
          echo "owner=$OWNER" >> $GITHUB_OUTPUT
          echo "repo=$REPO" >> $GITHUB_OUTPUT
      
      # 步骤3：配置全局Git身份
      - name: Configure Git
        run: |
          git config --global user.name "Jyf0214"
          git config --global user.email "actions@users.noreply.github.com"


      # 步骤5：同步到GitLab
      - name: Sync to GitLab
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        run: |
          git remote add gitlab "https://oauth2:$GITLAB_TOKEN@gitlab.com/${{ steps.repo-info.outputs.owner }}/${{ steps.repo-info.outputs.repo }}.git"
          git push --mirror --force gitlab
          echo "✅ Synced to GitLab"

      # 步骤6：同步到GitCode
      - name: Sync to GitCode
        env:
          GITCODE_TOKEN: ${{ secrets.GITCODE_TOKEN }}
        run: |
          git remote add gitcode "https://${{ steps.repo-info.outputs.owner }}:$GITCODE_TOKEN@gitcode.net/${{ steps.repo-info.outputs.owner }}/${{ steps.repo-info.outputs.repo }}.git"
          git push --mirror --force gitcode
          echo "✅ Synced to GitCode"